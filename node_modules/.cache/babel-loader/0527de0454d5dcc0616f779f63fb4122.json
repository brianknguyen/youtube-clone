{"ast":null,"code":"var _jsxFileName = \"/Users/briannguyen/Desktop/react-course/videos/src/components/App.js\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport youtube from '../apis/youtube';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: []\n    };\n\n    this.onTermSubmit = async term => {\n      const response = await youtube.get('/search', {\n        params: {\n          q: term\n        }\n      });\n      response.data.items;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onFormSubmit: this.onTermSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/briannguyen/Desktop/react-course/videos/src/components/App.js"],"names":["React","SearchBar","youtube","App","Component","state","videos","onTermSubmit","term","response","get","params","q","data","items","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AAACC,MAAAA,MAAM,EAAE;AAAT,KADsB;;AAAA,SAE9BC,YAF8B,GAEf,MAAMC,IAAN,IAAc;AACzB,YAAMC,QAAQ,GAAG,MAAMP,OAAO,CAACQ,GAAR,CAAY,SAAZ,EAAuB;AAC1CC,QAAAA,MAAM,EAAE;AACJC,UAAAA,CAAC,EAAEJ;AADC;AADkC,OAAvB,CAAvB;AAMAC,MAAAA,QAAQ,CAACI,IAAT,CAAcC,KAAd;AACH,KAV6B;AAAA;;AAY9BC,EAAAA,MAAM,GAAG;AACL,WACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKR,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADA;AAKH;;AAlB6B;;AAqBlC,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport SearchBar from './SearchBar';\nimport youtube from '../apis/youtube';\n\nclass App extends React.Component {\n    state = {videos: []};\n    onTermSubmit = async term => {\n        const response = await youtube.get('/search', {\n            params: {\n                q: term\n            }\n        });\n\n        response.data.items\n    };\n\n    render() {\n        return (\n        <div className=\"ui container\">\n            <SearchBar onFormSubmit={this.onTermSubmit} />\n        </div>\n        );\n    };\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}